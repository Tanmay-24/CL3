import math
import random

# Define city coordinates
cities = [(0,0), (1,3), (4,3), (6,1)]
n = len(cities)

# Calculate distance between two cities
def distance(a, b):
    return math.hypot(a[0] - b[0], a[1] - b[1])

# Calculate total path distance
def total_distance(path):
    return sum(distance(cities[path[i]], cities[path[(i + 1) % n]]) for i in range(n))

# Initialize variables
path = list(range(n))  # Initial path [0, 1, 2, 3]
best_path = path.copy()
best_distance = total_distance(best_path)

# Randomized search
for _ in range(100):  # Number of random trials
    random.shuffle(path)
    current_distance = total_distance(path)
    if current_distance < best_distance:
        best_path, best_distance = path.copy(), current_distance

# Print results
print("Best path order:", best_path)
print("Total distance:", round(best_distance, 2))
